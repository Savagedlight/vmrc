Copyright (c) 2012-2014 Michael Dexter <editor@callfortesting.org>
Script and instructions.txt Version: v.0.1

Thank you for trying vmrc, the Virtual Machine rc script.

This has come a long way from a 2005 jail(8) provisioning and management script
to a 2012 FreeBSD 9.0 bhyve build script to a series of sequential FreeBSD 10.*
VM provisioning and management scripts.

Because bhyve is only the latest multiplicity solution on FreeBSD, this
rc script includes basic jail and qemu support and could include chroot, simh
and GXemul support. Of these, QEMU is intended to help prepare OSs like OpenBSD
that require VirtIO and console adjustments prior to booting under bhyve.


### CHEAT SHEET ###

Unpack vmrc.tar
Run 'sh install.sh' or perform the steps manually
Verify your host_nic and host_zpool in /usr/local/etc/vm.conf
/usr/local/etc/rc.d/vm                (Show usage)
/usr/local/etc/rc.d/vm provision vm0  (Note: /usr/local/vm/vm0/vm0.conf)
(Fetches OS install media, formats disk, installs to disk)
/usr/local/etc/rc.d/vm start vm0      (Loads and boots vm0)

Alternatively:
/usr/local/etc/rc.d/vm iso vm0        (Fetches and boots and ISO image)

"ISO" mode will prepare a disk image to install the OS to and includes fetch
support for FreeBSD, Ubuntu and CentOS.

Manual scripts exist in install/ to fetch FreeNAS, pfSense and OpenBSD.


### COMMAND USAGE ###

/usr/local/etc/rc.d/vm commands can take in zero or more VM arguments.

'start', 'stop' and 'status' will act on all VMs in /usr/local/vm/ or
multiple VMs i.e.:

/usr/local/etc/rc.d/vm start vm0 vm2 vm3
/usr/local/etc/rc.d/vm status
/usr/local/etc/rc.d/vm status vm3


### COMMANDS ###

Top level commands without a VM name (i.e. /usr/local/etc/rc.d/vm start)

start		Load and boot all VMs in /usr/local/vm/
stop		Ungracefully terminate all VMs in /usr/local/vm/
status		List running VMs

All VMs in /usr/local/vm/ will be launched on boot! (see "CONSOLES" below)

Issue a "reboot" within the VM to shut it down. Cleaner ACPI shutdown is
available after the 10.0-RELEASE and is included in vmrc.

VM-specific commands (i.e. /etc/rc.d/vm vm0 provision)

start		Load and boot VMs
stop		kill and 'destroy' VMs
load		Load a VM with bhyveload(8) or grub-bhyve()
boot		Boot a VM with bhyve(8)
destroy		'destroy' a VM
restart		Run the stop and start functions on a VM
attach		Attach to a VM's nmdm serial port or tmux session
debug		List bhyvectl(8) --get-all output
iso			Format storage device, fetch an ISO image, boot to it
grub		Launch grub with the VM's disk and ISO images
mount		fsck(8) and mount(8) a FreeBSD VM disk image
umount		umount(8) a FreeBSD VM disk image
jail		Launch a FreeBSD VM's disk image with jail(8)
format		Create and format a FreeBSD VM disk image
fetch		fetch(1) FreeBSD distribution sets
install		Install and configure FreeBSD in a disk image
provision	Run the format, fetch and install functions
delete		Delete a VM and its images and directory tree


### VM LAYOUT ###

/usr/local/vm/distributions/  OS distrib. sets and ISOs, by named directory
/usr/local/vm/vm#/vm#.conf    VM config file: KEEP "#" UNIQUE (SAMPLE BELOW)
/usr/local/vm/vm#/vm#.img     VM raw disk image (provision or copy in)
/usr/local/vm/vm#/vm#.iso     Link to a bootable ISO image (fetch or copy in)
/usr/local/vm/vm#/mnt/        VM mount point for raw disk image

AT THIS TIME, ALL VMs ARE DISTINGUISHED BY THEIR TRAILING NUMERIC ID. Name VMs
as you please (i.e.: vm0 freebsd1 openbsd2 centos3) but keep their trailing
ID numbers unique (i.e. NOT: freebsd1 openbsd1). This may in time move to a PID
model or some other strategy.


### VM CONFIGURATION FILES ###

Configuration file location: /usr/local/vm/<name>#/<name>#.conf

(See the example files in install/)

vm_cpus=""               # Number of VM virtual CPUs (max 16)
vm_ram=""                # VM RAM Allocation in MB
vm_console=""            # stdio, nmdm, tmux or tmux-detached (sysutils/tmux)
vm_os_type=""            # freebsd, openbsd, or linux
vm_os_ver=""             # Exact OS version if auto-fetching
vm_dev_layout=""         # "gpt" or "mbr" volume layout (FreeBSD only)
vm_dev_type=""           # "img" for image, "zvol" or blank for other device
vm_device=""             # An existing device (sans /dev/) i.e.: "ada1"
vm_dev_size=""           # M or G for raw "img" volumes
vm_hostname=""           # VM hostname (FreeBSD only)
vm_timezone=""           # VM timezone (FreeBSD only)
vm_ipv4_addr=""          # Experimental for jail use
vm_searchdomain=""       # (FreeBSD only) Commented out below
vm_dns_addr=""           # (FreeBSD only) Commented out below
dist_site=""             # Hostname and directory for binary distribution sets
iso_site=""              # Hostname and directory for ISO image 
iso_img=""               # ISO filename for remote fetch
grub_boot_cmd=""         # grub-bhyve command to boot from IMG
grub_iso_cmd=""          # grub-bhyve command to boot from ISO
vm_hostbridge=""         # "amd_" for the AMD hostbridge
bhyve_flags=""           # Additional bhyve(8) flags
virtio_type=""           # "ahci-hd" or "virtio-blk"


### CONSOLES ###

The vm0 example directs the VM's output to standard output as determined by
the "vm_console" setting of "stdio". This is good for experimentation but will
surprise you when your system boots into the VM's captive console. For this
reason, "detached" nmdm and tmux-detached "vm_console" types are available.
All other examples are set to "nmdm" and either nmdm and tmux-detached consoles
can be attached to with using the "attach" command, i.e.:

/usr/local/etc/rc.d/vm attach vm1

You can detach from nmdm consoles with "~ CTRL-d" and from tmux sessions with
"CTRL-b d".


### DEPENDENCIES ###

tmux functionality requires ports/sysutils/tmux
ISO and non-FreeBSD VM support requires ports/sysutils/grub2-bhyve 
QEMU functionality requires ports/emulators/qemu(-devel)

Note: Early versions of the grub2-bhyve port include a gcc runtime requirement
which is in fact only a build requirement. This has been fixed.

< provisioned FreeBSD VMs: user root, no password 'reboot' when to shutdown >


### MISC ###

Please send questions, bug fixes, love mail and hate mail to:
Michael Dexter <editor@callfortesting.org>

I will consider offering this on something like GitHub if interest exists.

FreeBSD auto-provisioned VMs have sendmail semi-disabled and
"PermitRootLogin yes" set in /etc/ssh/sshd_config
VERIFY THESE SETTINGS BEFORE ANY PRODUCTION USE

FreeBSD VMs are also not fully prepared to run as jails as per the manual page.
(rpcbind_enable is not set etc.)

FreeBSD guests can be provisioned with "iso" mode but it will not set the needed
console. (A "smart" console is undergoing testing that would eliminate the need
for any console changes). For now, just as with vmrun.sh, start a "manual
configuration" console and run:

cat >> /etc/ttys << EOF
console "/usr/libexec/getty std.9600"   vt100   on secure
EOF

GNU/Linux users will find the "grub" command very useful for locating disks and
grub configuration files.

A few GNU/Linux-related features did not make it into the FreeBSD 10.0 release:

>3000M RAM support
The -w flag for better CentOS and RHEL performance


### SPECIAL THANKS ###

Thank you Neel, Peter, John and Tycho for your hard work on bhyve.

Thank you Devin for greatly improving this script and Allan at ScaleEngine for
testing it and providing resources for it and bhyve's improvement.


### TO DO ###

*NOT* PACKAGE THIS YET - IT IS NOT READY AND IS CHANGING RAPIDLY
note: Tested on 10.0-RELEASE, PC-BSD 10.0 and FreeBSD 11 snapshots
news: Automatic console detection is being tested
test: Try every incorrect sequence of commands and see if checks work
See "# fix: " throughout the script
test: Why are ubuntu VMs read-only upon boot?
fix: Test: acpi kill in FreeBSD 11.0
linux needs acpi-utils, openbsd doesn't support power button?
hw.allowpowerdown=1 ?
fix: Test: host_vmroot without trailing / (make idiot-proof)
fix: any way to avoid //'s in paths but safely not add trailing one in conf?
fix: CHECK FOR CONFLICTING VM ID NUMBERS BEFORE BOOT
	(Consider a PID or otherwise style of keeping VMs unique)
fix: Cosmetic: stalled return after cu session clean up (cleared with ENTER)
fix: Line wrapping!
fix: Formatting: Remaining spaces in place of tabs, for multiline info()?
fix: Formatting: Any way to elegantly wrap long URL's?
fix: Merge f_iso and vm_load/vm_boot
fix: Homogenize info/error/debug messages, lose some
fix: Why do nmdm VM's sometimes boot upon attach? (bug in nmdm)
fix: Check for a valid tmux session before attempting to attach?
fix: Add zvol and raw device support to grub and load
fix: Destroy VM zvols in delete function
fix: Add root-on-ZFS configuration for when the zfs_boot change is made
fix: Add pty console attachment option (/dev/pts/<n>), try a physical port
fix: Shorten the boot timeout for provisioned VMs. autoboot_delay="3"
fix: Perform real checks during the install stage: "ls" is weak, exits
fix: Why does second run of 'bhvye' on a loaded vm simply give a new line?
fix: Why is the base.txz and kernel taking so long on my T420/Ultrabay?
fix: Does grub boot need the CD ISO?
fix: Can grub NOT wipe out all preceding on screen (debug) text?
fix: f_vmmcheck: Is vmm going to be built in by default? (not yet!)
fix: f_vmmcheck: Note left-justified reverse indenting
fix: Remove info's and DEBUG's when satisfied?
fix: NEVER too many checks
fix: Push more checks to separate f_functions?
fix: bhyve: not loaded first: vm_open: Invalid argument or error 33
fix: Elegant way to use official VM images? (qemu-img conversion works)
     qemu-img convert -O raw freebsd.qcow2 freebsd.raw (needs console!)
fix: Could autoprovision with traditional jail settings from the man page:
          sendmail_enable="NO"
          inetd_flags="-wW -a 192.0.2.23"
          rpcbind_enable="NO
fix: idea: Dump the load and boot commands plus diagnostic info to a log file.
fix: idea: Add a 'top' command function 'top -uaP' ? How to show only bhyve?
fix: idea: Consider what other commands may want to act on multiple VMs
fix: idea: Cloud! (What was the question?) (ssh is your friend)
fix: idea: Popular jail functions
fix: idea: Have a separate jail shell-only (no rc) command for maintenance?
fix: idea: Config file hooks for commands at various steps?
fix: idea: "Master" VM cloning?
fix: idea: Add chroot, simh and GXemul support if they have serial output
fix: idea: freebsd-update on boot? (external problem?)
fix: idea: Bring back FreeBSD 8 style dist sets for fetch?
fix: idea: Probe disk layout and fs types? (vmrun.sh probe fails on zvols)
fix: idea: Maybe check for /mnt/.snap on new fs's as a test
fix: idea: Consider an "installworld" method as per the jail man page?
fix: idea: config file-> flags like vm_flags="em0 root ..."
fix: idea: Some flag to indicate "don't boot this VM" (move from dir)?
fix: idea: Add full ext2/3/4 support to the "mount" option (fuse ext4)
Note e2fsprogs and e2fsck /dev/md0s1 and mount -t ext2fs /dev/md0s1 /mnt
Linux ZFS may be very helpful as a LCD FS

fix: Note Neel's vmrun.sh loop:
while [ 1 ]; do
<destroy>
<load>
<boot>
	if [ $? -ne 0 ]; then
		break
	fi # exit if you get a non 0 return
done
